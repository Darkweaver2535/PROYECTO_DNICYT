# Generated by Django 4.2.20 on 2025-06-10 03:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mantenimiento', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RepuestoCritico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Repuesto')),
                ('codigo_fabricante', models.CharField(blank=True, max_length=100, verbose_name='Código del Fabricante')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('stock_minimo', models.PositiveIntegerField(default=1, verbose_name='Stock Mínimo')),
                ('tiempo_entrega', models.PositiveIntegerField(default=30, verbose_name='Tiempo de Entrega (días)')),
                ('proveedor', models.CharField(blank=True, max_length=200, verbose_name='Proveedor')),
                ('costo_unitario', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Costo Unitario')),
            ],
            options={
                'verbose_name': 'Repuesto Crítico',
                'verbose_name_plural': 'Repuestos Críticos',
            },
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='certificacion_vigente',
            field=models.BooleanField(default=False, verbose_name='Certificación Vigente'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='cumple_api',
            field=models.BooleanField(default=False, verbose_name='Cumple API 580'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='cumple_asme',
            field=models.BooleanField(default=False, verbose_name='Cumple ASME'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='cumple_iso',
            field=models.BooleanField(default=False, verbose_name='Cumple ISO 55000'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='disponibilidad_objetivo',
            field=models.DecimalField(decimal_places=2, default=95.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Disponibilidad Objetivo (%)'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='eficiencia_promedio',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Eficiencia Promedio (%)'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='fecha_ultima_auditoria',
            field=models.DateField(blank=True, null=True, verbose_name='Última Auditoría'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='mtbf',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='MTBF - Tiempo Medio Entre Fallas (horas)'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='mttr',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='MTTR - Tiempo Medio de Reparación (horas)'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='nivel_criticidad',
            field=models.CharField(choices=[('muy_baja', 'Muy Baja'), ('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('muy_alta', 'Muy Alta'), ('critica', 'Crítica')], default='media', max_length=20, verbose_name='Nivel de Criticidad'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='norma_aplicable',
            field=models.CharField(choices=[('iso_14224', 'ISO 14224 - Industrias de petróleo, petroquímica y gas natural'), ('iso_55000', 'ISO 55000 - Gestión de activos'), ('iso_13374', 'ISO 13374 - Monitoreo de condición y diagnóstico de máquinas'), ('iec_60300', 'IEC 60300 - Gestión de la confiabilidad'), ('din_31051', 'DIN 31051 - Fundamentos del mantenimiento'), ('norsok_z008', 'NORSOK Z-008 - Criticidad y análisis de riesgo'), ('api_580', 'API 580 - Inspección basada en riesgo'), ('asme_pcc', 'ASME PCC - Códigos de construcción y soldadura'), ('otra', 'Otra norma específica')], default='iso_55000', max_length=20, verbose_name='Norma Técnica Aplicable'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='norma_especifica',
            field=models.CharField(blank=True, help_text="Especificar si seleccionó 'Otra norma específica'", max_length=200, verbose_name='Norma Específica'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='tasa_cumplimiento',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tasa de Cumplimiento (%)'),
        ),
        migrations.AddField(
            model_name='planmantenimiento',
            name='repuestos_criticos',
            field=models.ManyToManyField(blank=True, to='mantenimiento.repuestocritico', verbose_name='Repuestos Críticos'),
        ),
    ]
