# Generated by Django 4.2.20 on 2025-06-13 01:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaCapacitacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('color_hex', models.CharField(default='#3b82f6', help_text='Color en formato hexadecimal (#RRGGBB)', max_length=7)),
                ('icono', models.CharField(default='bi-mortarboard', help_text='Clase de icono Bootstrap Icons', max_length=50)),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de visualización')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Capacitación',
                'verbose_name_plural': 'Categorías de Capacitación',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='CursoTaller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('tipo', models.CharField(choices=[('curso', 'Curso'), ('taller', 'Taller'), ('conferencia', 'Conferencia'), ('seminario', 'Seminario')], default='curso', max_length=20)),
                ('instructor', models.CharField(max_length=200)),
                ('duracion_horas', models.PositiveIntegerField(help_text='Duración estimada en horas')),
                ('duracion_minutos', models.PositiveIntegerField(default=0, help_text='Minutos adicionales')),
                ('dificultad', models.CharField(choices=[('basico', 'Básico'), ('intermedio', 'Intermedio'), ('avanzado', 'Avanzado')], default='basico', max_length=20)),
                ('modalidad', models.CharField(choices=[('presencial', 'Presencial'), ('virtual', 'Virtual'), ('hibrido', 'Híbrido')], default='virtual', max_length=20)),
                ('enlace_youtube', models.URLField(help_text='URL del video de YouTube (ej: https://www.youtube.com/watch?v=VIDEO_ID)', validators=[django.core.validators.URLValidator()])),
                ('youtube_video_id', models.CharField(blank=True, help_text='ID del video de YouTube (se extrae automáticamente)', max_length=50)),
                ('objetivos', models.TextField(blank=True, help_text='Objetivos de aprendizaje (uno por línea)')),
                ('requisitos', models.TextField(blank=True, help_text='Requisitos previos (uno por línea)')),
                ('contenido_temas', models.TextField(blank=True, help_text='Temas que se cubren (uno por línea)')),
                ('fecha_programada', models.DateTimeField(blank=True, help_text='Fecha programada para cursos presenciales', null=True)),
                ('fecha_limite_inscripcion', models.DateTimeField(blank=True, null=True)),
                ('max_participantes', models.PositiveIntegerField(default=0, help_text='0 = Sin límite')),
                ('certificacion_disponible', models.BooleanField(default=False)),
                ('puntos_capacitacion', models.PositiveIntegerField(default=1, help_text='Puntos que otorga este curso')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('publicado', 'Publicado'), ('archivado', 'Archivado')], default='borrador', max_length=20)),
                ('destacado', models.BooleanField(default=False, help_text='Mostrar en sección destacados')),
                ('etiquetas', models.TextField(blank=True, help_text='Etiquetas separadas por comas')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('fecha_publicacion', models.DateTimeField(blank=True, null=True)),
                ('vistas', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos_creados', to=settings.AUTH_USER_MODEL)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to='capacitacion.categoriacapacitacion')),
            ],
            options={
                'verbose_name': 'Curso/Taller',
                'verbose_name_plural': 'Cursos/Talleres',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HistorialVisualizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_visualizacion', models.DateTimeField(auto_now_add=True)),
                ('tiempo_visualizado', models.PositiveIntegerField(default=0, help_text='Tiempo en segundos')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizaciones', to='capacitacion.cursotaller')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Visualización',
                'verbose_name_plural': 'Historial de Visualizaciones',
                'ordering': ['-fecha_visualizacion'],
            },
        ),
        migrations.CreateModel(
            name='InscripcionCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('inscrito', 'Inscrito'), ('en_progreso', 'En Progreso'), ('completado', 'Completado'), ('cancelado', 'Cancelado')], default='inscrito', max_length=20)),
                ('progreso_porcentaje', models.PositiveIntegerField(default=0, help_text='Porcentaje de progreso (0-100)')),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_completado', models.DateTimeField(blank=True, null=True)),
                ('calificacion', models.PositiveIntegerField(blank=True, help_text='Calificación del 1 al 5', null=True)),
                ('comentario', models.TextField(blank=True)),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True)),
                ('ultima_actividad', models.DateTimeField(auto_now=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='capacitacion.cursotaller')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones_cursos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inscripción a Curso',
                'verbose_name_plural': 'Inscripciones a Cursos',
                'ordering': ['-fecha_inscripcion'],
                'unique_together': {('curso', 'usuario')},
            },
        ),
        migrations.AddIndex(
            model_name='cursotaller',
            index=models.Index(fields=['estado', 'categoria'], name='capacitacio_estado_e4e0e5_idx'),
        ),
        migrations.AddIndex(
            model_name='cursotaller',
            index=models.Index(fields=['fecha_programada'], name='capacitacio_fecha_p_8b7685_idx'),
        ),
        migrations.AddIndex(
            model_name='cursotaller',
            index=models.Index(fields=['-fecha_creacion'], name='capacitacio_fecha_c_944203_idx'),
        ),
    ]
