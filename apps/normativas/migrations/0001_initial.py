# Generated by Django 4.2.20 on 2025-06-15 05:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CapacitacionSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título de la Capacitación')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('fecha_inicio', models.DateTimeField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateTimeField(verbose_name='Fecha de Finalización')),
                ('modalidad', models.CharField(choices=[('presencial', 'Presencial'), ('virtual', 'Virtual'), ('mixta', 'Mixta')], default='presencial', max_length=15, verbose_name='Modalidad')),
                ('lugar', models.CharField(blank=True, max_length=100, verbose_name='Lugar')),
                ('instructor', models.CharField(max_length=100, verbose_name='Instructor/Facilitador')),
                ('max_participantes', models.PositiveIntegerField(default=20, verbose_name='Máximo de Participantes')),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('en_curso', 'En Curso'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('pospuesta', 'Pospuesta')], default='programada', max_length=15, verbose_name='Estado')),
                ('es_obligatoria', models.BooleanField(default=False, verbose_name='Capacitación Obligatoria')),
                ('certificacion', models.BooleanField(default=True, verbose_name='Otorga Certificación')),
                ('material_capacitacion', models.FileField(blank=True, null=True, upload_to='normativas/capacitaciones/', verbose_name='Material de Capacitación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capacitaciones_creadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Capacitación de Seguridad',
                'verbose_name_plural': 'Capacitaciones de Seguridad',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Categoría')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('color_hex', models.CharField(default='#dc2626', help_text='Color en formato hexadecimal para identificación visual', max_length=7, verbose_name='Color')),
                ('icono', models.CharField(default='bi-shield-exclamation', help_text='Clase de icono Bootstrap Icons', max_length=50, verbose_name='Icono')),
                ('orden', models.PositiveIntegerField(default=0, verbose_name='Orden de Visualización')),
                ('es_critica', models.BooleanField(default=False, help_text='Las categorías críticas requieren revisión frecuente', verbose_name='Categoría Crítica')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
            ],
            options={
                'verbose_name': 'Categoría de Seguridad',
                'verbose_name_plural': 'Categorías de Seguridad',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ParticipacionCapacitacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('inscrito', 'Inscrito'), ('asistio', 'Asistió'), ('completo', 'Completó'), ('abandono', 'Abandonó'), ('ausente', 'Ausente')], default='inscrito', max_length=15, verbose_name='Estado')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Inscripción')),
                ('calificacion', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Calificación')),
                ('certificado_otorgado', models.BooleanField(default=False, verbose_name='Certificado Otorgado')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios')),
                ('capacitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='normativas.capacitacionseguridad')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participación en Capacitación',
                'verbose_name_plural': 'Participaciones en Capacitaciones',
                'unique_together': {('capacitacion', 'participante')},
            },
        ),
        migrations.CreateModel(
            name='NormativaSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Código de Normativa')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True, verbose_name='Slug')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('tipo', models.CharField(choices=[('normativa', 'Normativa General'), ('protocolo', 'Protocolo de Seguridad'), ('procedimiento', 'Procedimiento de Emergencia'), ('instructivo', 'Instructivo de Seguridad'), ('reglamento', 'Reglamento Interno'), ('politica', 'Política de Seguridad'), ('manual', 'Manual de Seguridad'), ('checklist', 'Lista de Verificación'), ('epp', 'Equipos de Protección Personal'), ('capacitacion', 'Normativa de Capacitación')], default='normativa', max_length=20, verbose_name='Tipo')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('critica', 'Crítica')], default='media', max_length=10, verbose_name='Prioridad')),
                ('ambito_aplicacion', models.CharField(choices=[('general', 'General - Todo el Laboratorio'), ('soldadura', 'Área de Soldadura'), ('maquinado', 'Área de Maquinado'), ('fundicion', 'Área de Fundición'), ('plasticos', 'Área de Plásticos'), ('prototipado', 'Área de Prototipado'), ('almacen', 'Área de Almacén'), ('administracion', 'Área Administrativa'), ('mantenimiento', 'Área de Mantenimiento'), ('emergencias', 'Emergencias y Evacuación'), ('visitantes', 'Protocolo para Visitantes')], default='general', max_length=20, verbose_name='Ámbito de Aplicación')),
                ('contenido', models.TextField(help_text='Contenido principal de la normativa', verbose_name='Contenido Detallado')),
                ('objetivos', models.TextField(blank=True, help_text='Uno por línea', verbose_name='Objetivos')),
                ('alcance', models.TextField(blank=True, verbose_name='Alcance y Aplicabilidad')),
                ('responsabilidades', models.TextField(blank=True, help_text='Responsabilidades por área/cargo', verbose_name='Responsabilidades')),
                ('procedimientos', models.TextField(blank=True, help_text='Pasos específicos a seguir', verbose_name='Procedimientos')),
                ('recursos_necesarios', models.TextField(blank=True, help_text='EPP, herramientas, etc.', verbose_name='Recursos Necesarios')),
                ('archivo_principal', models.FileField(blank=True, null=True, upload_to='normativas/documentos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'doc'])], verbose_name='Archivo Principal')),
                ('imagen_referencia', models.ImageField(blank=True, help_text='Imagen ilustrativa o diagrama', null=True, upload_to='normativas/imagenes/', verbose_name='Imagen de Referencia')),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Aprobación')),
                ('version', models.CharField(default='1.0', max_length=10, verbose_name='Versión')),
                ('motivo_actualizacion', models.TextField(blank=True, verbose_name='Motivo de Actualización')),
                ('fecha_vigencia_inicio', models.DateField(verbose_name='Fecha de Inicio de Vigencia')),
                ('fecha_vigencia_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin de Vigencia')),
                ('frecuencia_revision', models.PositiveIntegerField(default=365, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(1095)], verbose_name='Frecuencia de Revisión (días)')),
                ('proxima_revision', models.DateField(blank=True, null=True, verbose_name='Próxima Revisión')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('revision', 'En Revisión'), ('vigente', 'Vigente'), ('suspendida', 'Suspendida'), ('obsoleta', 'Obsoleta'), ('archivada', 'Archivada')], default='borrador', max_length=15, verbose_name='Estado')),
                ('es_obligatoria', models.BooleanField(default=True, verbose_name='Cumplimiento Obligatorio')),
                ('requiere_capacitacion', models.BooleanField(default=False, verbose_name='Requiere Capacitación Previa')),
                ('requiere_evaluacion', models.BooleanField(default=False, verbose_name='Requiere Evaluación Periódica')),
                ('vistas', models.PositiveIntegerField(default=0, verbose_name='Visualizaciones')),
                ('descargas', models.PositiveIntegerField(default=0, verbose_name='Descargas')),
                ('cumplimiento_promedio', models.DecimalField(decimal_places=2, default=0.0, help_text='Basado en inspecciones', max_digits=5, verbose_name='Porcentaje de Cumplimiento')),
                ('palabras_clave', models.TextField(blank=True, help_text='Separadas por comas para facilitar búsquedas', verbose_name='Palabras Clave')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
                ('fecha_publicacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Publicación')),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='normativas_aprobadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='normativas_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normativas', to='normativas.categoriaseguridad', verbose_name='Categoría')),
                ('normativas_relacionadas', models.ManyToManyField(blank=True, related_name='relacionadas_por', to='normativas.normativaseguridad', verbose_name='Normativas Relacionadas')),
                ('version_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versiones_posteriores', to='normativas.normativaseguridad', verbose_name='Versión Anterior')),
            ],
            options={
                'verbose_name': 'Normativa de Seguridad',
                'verbose_name_plural': 'Normativas de Seguridad',
                'ordering': ['-fecha_modificacion'],
            },
        ),
        migrations.CreateModel(
            name='InspeccionSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_inspeccion', models.CharField(choices=[('rutinaria', 'Inspección Rutinaria'), ('seguimiento', 'Seguimiento de Observaciones'), ('sorpresa', 'Inspección Sorpresa'), ('auditoria', 'Auditoría de Seguridad'), ('incidente', 'Post-Incidente')], default='rutinaria', max_length=15, verbose_name='Tipo de Inspección')),
                ('fecha_inspeccion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Inspección')),
                ('area_inspeccionada', models.CharField(max_length=100, verbose_name='Área Inspeccionada')),
                ('resultado', models.CharField(choices=[('cumple', 'Cumple Totalmente'), ('cumple_observaciones', 'Cumple con Observaciones'), ('no_cumple', 'No Cumple'), ('no_aplica', 'No Aplica')], max_length=25, verbose_name='Resultado')),
                ('puntuacion', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Puntuación (%)')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones y Hallazgos')),
                ('acciones_correctivas', models.TextField(blank=True, verbose_name='Acciones Correctivas Requeridas')),
                ('fecha_limite_correccion', models.DateField(blank=True, null=True, verbose_name='Fecha Límite para Corrección')),
                ('corregido', models.BooleanField(default=False, verbose_name='Observaciones Corregidas')),
                ('fecha_verificacion', models.DateField(blank=True, null=True, verbose_name='Fecha de Verificación')),
                ('fotos_evidencia', models.FileField(blank=True, null=True, upload_to='normativas/inspecciones/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'pdf'])], verbose_name='Fotos de Evidencia')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspecciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('normativa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspecciones', to='normativas.normativaseguridad')),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verificaciones_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inspección de Seguridad',
                'verbose_name_plural': 'Inspecciones de Seguridad',
                'ordering': ['-fecha_inspeccion'],
            },
        ),
        migrations.CreateModel(
            name='IncidenteSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_incidente', models.CharField(blank=True, max_length=15, unique=True, verbose_name='Número de Incidente')),
                ('fecha_incidente', models.DateTimeField(verbose_name='Fecha y Hora del Incidente')),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Reporte')),
                ('tipo_incidente', models.CharField(choices=[('accidente', 'Accidente Laboral'), ('casi_accidente', 'Casi Accidente'), ('condicion_insegura', 'Condición Insegura'), ('acto_inseguro', 'Acto Inseguro'), ('derrame', 'Derrame de Sustancias'), ('incendio', 'Principio de Incendio'), ('falla_equipo', 'Falla de Equipo de Seguridad'), ('exposicion', 'Exposición a Riesgo')], max_length=20, verbose_name='Tipo de Incidente')),
                ('gravedad', models.CharField(choices=[('leve', 'Leve'), ('moderado', 'Moderado'), ('grave', 'Grave'), ('muy_grave', 'Muy Grave'), ('critico', 'Crítico')], max_length=10, verbose_name='Gravedad')),
                ('area_afectada', models.CharField(max_length=100, verbose_name='Área Afectada')),
                ('descripcion_lugar', models.TextField(verbose_name='Descripción del Lugar')),
                ('personas_involucradas', models.TextField(help_text='Nombres y roles de personas involucradas', verbose_name='Personas Involucradas')),
                ('testigos', models.TextField(blank=True, help_text='Nombres de testigos', verbose_name='Testigos')),
                ('descripcion_incidente', models.TextField(verbose_name='Descripción Detallada del Incidente')),
                ('causas_inmediatas', models.TextField(blank=True, verbose_name='Causas Inmediatas')),
                ('causas_raiz', models.TextField(blank=True, verbose_name='Causas Raíz')),
                ('acciones_inmediatas', models.TextField(verbose_name='Acciones Inmediatas Tomadas')),
                ('acciones_correctivas', models.TextField(blank=True, verbose_name='Acciones Correctivas')),
                ('acciones_preventivas', models.TextField(blank=True, verbose_name='Acciones Preventivas')),
                ('estado', models.CharField(choices=[('reportado', 'Reportado'), ('investigando', 'En Investigación'), ('resuelto', 'Resuelto'), ('cerrado', 'Cerrado')], default='reportado', max_length=15, verbose_name='Estado')),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Cierre')),
                ('fotos_evidencia', models.FileField(blank=True, null=True, upload_to='normativas/incidentes/', verbose_name='Fotos/Videos')),
                ('reporte_completo', models.FileField(blank=True, null=True, upload_to='normativas/reportes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])], verbose_name='Reporte Completo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('investigador_asignado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes_investigados', to=settings.AUTH_USER_MODEL)),
                ('normativas_incumplidas', models.ManyToManyField(blank=True, related_name='incidentes_relacionados', to='normativas.normativaseguridad', verbose_name='Normativas Incumplidas')),
                ('reportado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidentes_reportados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Incidente de Seguridad',
                'verbose_name_plural': 'Incidentes de Seguridad',
                'ordering': ['-fecha_incidente'],
            },
        ),
        migrations.CreateModel(
            name='HistorialNormativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(choices=[('crear', 'Normativa Creada'), ('editar', 'Normativa Editada'), ('aprobar', 'Normativa Aprobada'), ('publicar', 'Normativa Publicada'), ('suspender', 'Normativa Suspendida'), ('archivar', 'Normativa Archivada'), ('consultar', 'Normativa Consultada'), ('descargar', 'Archivo Descargado'), ('nueva_version', 'Nueva Versión Creada')], max_length=15, verbose_name='Acción')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('version_anterior', models.CharField(blank=True, max_length=10, verbose_name='Versión Anterior')),
                ('version_nueva', models.CharField(blank=True, max_length=10, verbose_name='Versión Nueva')),
                ('cambios_realizados', models.JSONField(blank=True, default=dict, verbose_name='Cambios Realizados')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('normativa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='normativas.normativaseguridad')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Normativa',
                'verbose_name_plural': 'Historial de Normativas',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='capacitacionseguridad',
            name='normativas_cubiertas',
            field=models.ManyToManyField(related_name='capacitaciones', to='normativas.normativaseguridad', verbose_name='Normativas Cubiertas'),
        ),
        migrations.AddField(
            model_name='capacitacionseguridad',
            name='participantes',
            field=models.ManyToManyField(related_name='capacitaciones_seguridad', through='normativas.ParticipacionCapacitacion', to=settings.AUTH_USER_MODEL, verbose_name='Participantes'),
        ),
        migrations.AddIndex(
            model_name='normativaseguridad',
            index=models.Index(fields=['estado', 'categoria'], name='normativas__estado_ae46bb_idx'),
        ),
        migrations.AddIndex(
            model_name='normativaseguridad',
            index=models.Index(fields=['tipo', 'prioridad'], name='normativas__tipo_f562b4_idx'),
        ),
        migrations.AddIndex(
            model_name='normativaseguridad',
            index=models.Index(fields=['-fecha_modificacion'], name='normativas__fecha_m_34bd76_idx'),
        ),
        migrations.AddIndex(
            model_name='normativaseguridad',
            index=models.Index(fields=['codigo'], name='normativas__codigo_c77370_idx'),
        ),
    ]
